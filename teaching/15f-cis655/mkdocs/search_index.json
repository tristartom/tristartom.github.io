{
    "docs": [
        {
            "location": "/", 
            "text": "CIS655/CSE661: Advanced computer architecture\n\n\nInstructor: Yuzhe (Richard) Tang\n\n\nNews\n\n\n\n\nSep. 1, 2015: the first day of class, welcome!", 
            "title": "Home"
        }, 
        {
            "location": "/#cis655cse661-advanced-computer-architecture", 
            "text": "Instructor: Yuzhe (Richard) Tang", 
            "title": "CIS655/CSE661: Advanced computer architecture"
        }, 
        {
            "location": "/#news", 
            "text": "Sep. 1, 2015: the first day of class, welcome!", 
            "title": "News"
        }, 
        {
            "location": "/syl/", 
            "text": "Syllabus\n\n\nOutline\n\n\nCIS655/CSE661 teaches on the advanced topics of computer architecture.\nThe teaching puts an emphasis on the practical aspects by taking a programming-oriented approach.\n\n\nClass meetings\n\n\n\n\nWhen: TTh 8:00 - 9:30AM\n\n\nWhere: Watson Theatre (Subject to future chance)\n\n\n\n\nPrerequisite (Who should take the course?)\n\n\nThis course assumes students have basic knowledge about system programming and assembly code (e.g. Linux POSIX, C/C++ and x86-64).\n\n\nTextbook\n\n\nComputer Architecture: A Quantitative Approach, 5th Edition, The Morgan Kaufmann Series in Computer Architecture and Design\n\n\nGrading policy\n\n\nSubmission of any work done by others will result in an F grade in the course, with the academic integrity violation reported to the University administration for further action. Violations include plagiarism, and usage of material available on the internet without proper attribution.\n\n\n\n\nClass participation (5%)\n\n\nHomework (35%)\n\n\nProject (25%)\n\n\nFinal exam (35%)\n\n\n\n\nTA and office hours\n\n\n\n\nTA:  \n\n\n\n\n\n\nJielong Xu: jxu21@syr.edu  \n\n\n\n\n\n\n\n\n\n\nHari Krishna Gajarla: hgajarla@syr.edu  \n\n\n\n\n\n\n\n\n\n\nKatchaguy (Bebe) Areekijseree: kareekij@syr.edu  \n\n\n\n\n\n\n\n\n\n\nHaoyi Shi: hshi05@syr.edu  \n\n\n\n\n\n\nInstructor: Yuzhe (Richard) Tang  \n\n\n\n\n\n\nEmail: ytang100@syr.edu (when you send email to me, include \n[CIS 655]\n in the subject.)  \n\n\n\n\n\n\n\n\n\n\nOffice: 4-193, CST", 
            "title": "Syllabus"
        }, 
        {
            "location": "/syl/#syllabus", 
            "text": "", 
            "title": "Syllabus"
        }, 
        {
            "location": "/syl/#outline", 
            "text": "CIS655/CSE661 teaches on the advanced topics of computer architecture.\nThe teaching puts an emphasis on the practical aspects by taking a programming-oriented approach.", 
            "title": "Outline"
        }, 
        {
            "location": "/syl/#class-meetings", 
            "text": "When: TTh 8:00 - 9:30AM  Where: Watson Theatre (Subject to future chance)", 
            "title": "Class meetings"
        }, 
        {
            "location": "/syl/#prerequisite-who-should-take-the-course", 
            "text": "This course assumes students have basic knowledge about system programming and assembly code (e.g. Linux POSIX, C/C++ and x86-64).", 
            "title": "Prerequisite (Who should take the course?)"
        }, 
        {
            "location": "/syl/#textbook", 
            "text": "Computer Architecture: A Quantitative Approach, 5th Edition, The Morgan Kaufmann Series in Computer Architecture and Design", 
            "title": "Textbook"
        }, 
        {
            "location": "/syl/#grading-policy", 
            "text": "Submission of any work done by others will result in an F grade in the course, with the academic integrity violation reported to the University administration for further action. Violations include plagiarism, and usage of material available on the internet without proper attribution.   Class participation (5%)  Homework (35%)  Project (25%)  Final exam (35%)", 
            "title": "Grading policy"
        }, 
        {
            "location": "/syl/#ta-and-office-hours", 
            "text": "TA:      Jielong Xu: jxu21@syr.edu        Hari Krishna Gajarla: hgajarla@syr.edu        Katchaguy (Bebe) Areekijseree: kareekij@syr.edu        Haoyi Shi: hshi05@syr.edu      Instructor: Yuzhe (Richard) Tang      Email: ytang100@syr.edu (when you send email to me, include  [CIS 655]  in the subject.)        Office: 4-193, CST", 
            "title": "TA and office hours"
        }, 
        {
            "location": "/sched/", 
            "text": "Schedule\n\n\n\n\n\n\n\n\nTopic\n\n\nSession\n\n\nSlides\n\n\n\n\n\n\n\n\n\n\n1.Overview\n\n\nintro\n\n\n[\nslides\n]\n\n\n\n\n\n\n1.Overview\n\n\nmetrics\n\n\n[\nslides\n]\n\n\n\n\n\n\n2.CPU\n\n\npipelining\n\n\n[\nslides\n]\n\n\n\n\n\n\n2.CPU\n\n\ncompiler ILP\n\n\n[\nslides\n]\n\n\n\n\n\n\n2.CPU\n\n\nbranch\n\n\n[\nslides\n]\n\n\n\n\n\n\n2.CPU\n\n\ntomasulo\n\n\n[\nslides\n]\n\n\n\n\n\n\n2.CPU\n\n\nmulti-issue CPU\n\n\n[\nslides\n]\n\n\n\n\n\n\n3.Memory\n\n\ncache\n\n\n[\nslides\n]\n\n\n\n\n\n\n3.Memory\n\n\ncache2\n\n\n[\nslides\n]\n\n\n\n\n\n\n3.Memory\n\n\nmemory\n\n\n[\nslides\n]\n\n\n\n\n\n\n4.Multi-processing\n\n\nmultiprocessing\n\n\n[\nslides\n]\n\n\n\n\n\n\n4.Multi-processing\n\n\ncache-MP\n\n\n[\nslides\n]\n\n\n\n\n\n\n4.Multi-processing\n\n\nsynchronization\n\n\n[\nslides\n]\n\n\n\n\n\n\n4.Multi-processing\n\n\nmany-core\n\n\n[\nslides\n]\n\n\n\n\n\n\n5.IO\n\n\ninterconnect\n\n\n[\nslides\n]\n\n\n\n\n\n\n5.IO\n\n\ninterconnect2\n\n\n[\nslides\n]\n\n\n\n\n\n\n5.IO\n\n\nstorage\n\n\n[\nslides\n]\n\n\n\n\n\n\n5.IO\n\n\nstore\n\n\n[\nslides\n]\n\n\n\n\n\n\n6.WSC \n misc\n\n\nwsc\n\n\n[\nslides\n]\n\n\n\n\n\n\n6.WSC \n misc\n\n\nsoftware in wsc\n\n\n[\nslides\n]\n\n\n\n\n\n\n6.WSC \n misc\n\n\ninfrastructure\n\n\n[\nslides\n]\n\n\n\n\n\n\n6.WSC \n misc\n\n\nenergy\n\n\n[\nslides\n]", 
            "title": "Schedule"
        }, 
        {
            "location": "/sched/#schedule", 
            "text": "Topic  Session  Slides      1.Overview  intro  [ slides ]    1.Overview  metrics  [ slides ]    2.CPU  pipelining  [ slides ]    2.CPU  compiler ILP  [ slides ]    2.CPU  branch  [ slides ]    2.CPU  tomasulo  [ slides ]    2.CPU  multi-issue CPU  [ slides ]    3.Memory  cache  [ slides ]    3.Memory  cache2  [ slides ]    3.Memory  memory  [ slides ]    4.Multi-processing  multiprocessing  [ slides ]    4.Multi-processing  cache-MP  [ slides ]    4.Multi-processing  synchronization  [ slides ]    4.Multi-processing  many-core  [ slides ]    5.IO  interconnect  [ slides ]    5.IO  interconnect2  [ slides ]    5.IO  storage  [ slides ]    5.IO  store  [ slides ]    6.WSC   misc  wsc  [ slides ]    6.WSC   misc  software in wsc  [ slides ]    6.WSC   misc  infrastructure  [ slides ]    6.WSC   misc  energy  [ slides ]", 
            "title": "Schedule"
        }, 
        {
            "location": "/proj/", 
            "text": "Advanced Project\n\n\nFormat\n\n\nStudents are expected to work in a group fashion; that is, once student groups are formed, a student is allowed only to collaborate inside his/her group (but \nNOT\n with students in other groups). Each group of students should work on one project, turn in one deliverable; so the workload assignment is encouraged. The project has two options; survey-oriented option, and programming option. There are some sample topics described in the document, and students are free to choose the sample topics or propose a new topic for their project; the new  topic should be relevant to computer architecture and systems, and reflect the advances in recent years.\n\n\nTimeline\n\n\n\n\n\n\n\n\nWeek\n\n\nSurvey\n\n\nProgramming\n\n\n\n\n\n\n\n\n\n\nWeek 1-2\n\n\ngroup assigned\n\n\ngroup assigned\n\n\n\n\n\n\nWeek 3-4\n\n\ntopic assigned\n\n\ntopic assigned\n\n\n\n\n\n\nWeek 6\n\n\n\n\nprogress check\n\n\n\n\n\n\nWeek 9\n\n\nmid-term report\n\n\nmid-term report\n\n\n\n\n\n\nWeek 11\n\n\n\n\nprogress check\n\n\n\n\n\n\nWeek 13\n\n\nfinal paper/demo\n\n\nfinal demo\n\n\n\n\n\n\n\n\nOptions\n\n\nSurvey-oriented option\n\n\nChoose one topic (or make a proposal), find related papers and open-source software, write a 10-page technology review. Note that this is not a pure \"text-writing\" task --- students are expected to survey existing software and to demonstrate the practical aspects of the topic (e.g. what kind of new APIs are made available to software programmers).\n\n\nDeliverable: final paper, presentation and optional code demonstration.\n\n\nProgramming option\n\n\nBased on the chosen topic, set up the computer system, write code/scripts, and collect measurement data and performance analysis.\n\n\nDeliverable: final demo of up-and-running systems and measurement results.\n\n\nSample Topics\n\n\nSurvey-oriented topics\n\n\n\n\nMany-core\n\n\nSSD/NVM\n\n\nGPGPU  \n\n\nExample: GPUOcelot\n\n\nSoftware-defined networking   \n\n\nExample: OpenFlow/MiniNet\n\n\nInfiniband  \n\n\nVirtualization  \n\n\nExample: XEN, vSphere, QEMU\n\n\nCloud architecture  \n\n\nExample: Amazon AWS (availability zone, EBS, EMR, etc)\n\n\nInternet of things \n\n\nExample: Mobile sensing, wearable devices\n\n\nFPGA  \n\n\n\n\nProgramming topics\n\n\n\n\nRequest-level tracing in big-data distributed systems\n\n\nEmulating Intel SGX instructions", 
            "title": "Project"
        }, 
        {
            "location": "/proj/#advanced-project", 
            "text": "", 
            "title": "Advanced Project"
        }, 
        {
            "location": "/proj/#format", 
            "text": "Students are expected to work in a group fashion; that is, once student groups are formed, a student is allowed only to collaborate inside his/her group (but  NOT  with students in other groups). Each group of students should work on one project, turn in one deliverable; so the workload assignment is encouraged. The project has two options; survey-oriented option, and programming option. There are some sample topics described in the document, and students are free to choose the sample topics or propose a new topic for their project; the new  topic should be relevant to computer architecture and systems, and reflect the advances in recent years.", 
            "title": "Format"
        }, 
        {
            "location": "/proj/#timeline", 
            "text": "Week  Survey  Programming      Week 1-2  group assigned  group assigned    Week 3-4  topic assigned  topic assigned    Week 6   progress check    Week 9  mid-term report  mid-term report    Week 11   progress check    Week 13  final paper/demo  final demo", 
            "title": "Timeline"
        }, 
        {
            "location": "/proj/#options", 
            "text": "Survey-oriented option  Choose one topic (or make a proposal), find related papers and open-source software, write a 10-page technology review. Note that this is not a pure \"text-writing\" task --- students are expected to survey existing software and to demonstrate the practical aspects of the topic (e.g. what kind of new APIs are made available to software programmers).  Deliverable: final paper, presentation and optional code demonstration.  Programming option  Based on the chosen topic, set up the computer system, write code/scripts, and collect measurement data and performance analysis.  Deliverable: final demo of up-and-running systems and measurement results.", 
            "title": "Options"
        }, 
        {
            "location": "/proj/#sample-topics", 
            "text": "Survey-oriented topics   Many-core  SSD/NVM  GPGPU    Example: GPUOcelot  Software-defined networking     Example: OpenFlow/MiniNet  Infiniband    Virtualization    Example: XEN, vSphere, QEMU  Cloud architecture    Example: Amazon AWS (availability zone, EBS, EMR, etc)  Internet of things   Example: Mobile sensing, wearable devices  FPGA     Programming topics   Request-level tracing in big-data distributed systems  Emulating Intel SGX instructions", 
            "title": "Sample Topics"
        }
    ]
}