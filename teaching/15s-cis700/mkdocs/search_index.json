{
    "docs": [
        {
            "location": "/", 
            "text": "CIS700/CSE791: Distributed Systems in Cloud (DSiC)\n\n\nInstructor: Yuzhe (Richard) Tang\n\n\nNews\n\n\n\n\nNov. 1, 2015: Updates: two research papers from this course are accepted! Cong. to Yue Duan and Scott Constable!  \n\n\nYue Duan, Mu Zhang, Heng Yin, Yuzhe Tang. \"Privacy-Preserving Offloading of Mobile App to the Public Cloud\", in HotCloud'15\n\n\nScott D Constable, Yuzhe Tang, Shuang Wang, Xiaoqian Jiang, Steve Chapin. \"Privacy-Preserving GWAS Analysis on Federated Genomic Datasets\", in BMC'15\n\n\n\n\n\n\nMay. 1, 2015: End of the class, Thank you!\n\n\nMar. 26, 2015: Schedule updated: [\nProject\n]!\n\n\nFeb. 20, 2015: Mid-term report requirements added: [\nProject\n]!\n\n\nFeb. 20, 2015: Presentation attacker added: [\nPresentation\n]!\n\n\nFeb. 7, 2015: Presentation requirement added: [\nPresentation\n]!\n\n\nFeb. 6, 2015: Project policy and resource updated!\n\n\nFeb. 6, 2015: New presentation requriement: [\nSchedule\n]!\n\n\nJan. 30, 2015: Slides updated in [\nSchedule\n], and keywords updated in [\nPapers\n]!\n\n\nJan. 29, 2015: Presentation requriement updated in [\nSchedule\n]!\n\n\nJan. 27, 2015: Project topics updated!\n\n\nJan. 26, 2015: Slides updated in [\nSchedule\n]!\n\n\nJan. 23, 2015: Presenter fixed!\n\n\nJan. 21, 2015: Presenter updated!\n\n\nJan. 19, 2015: Schedule fixed!\n\n\nJan. 16, 2015: Project and schedule updated!\n\n\nJan. 15, 2015: Welcome!", 
            "title": "Home"
        }, 
        {
            "location": "/#cis700cse791-distributed-systems-in-cloud-dsic", 
            "text": "Instructor: Yuzhe (Richard) Tang", 
            "title": "CIS700/CSE791: Distributed Systems in Cloud (DSiC)"
        }, 
        {
            "location": "/#news", 
            "text": "Nov. 1, 2015: Updates: two research papers from this course are accepted! Cong. to Yue Duan and Scott Constable!    Yue Duan, Mu Zhang, Heng Yin, Yuzhe Tang. \"Privacy-Preserving Offloading of Mobile App to the Public Cloud\", in HotCloud'15  Scott D Constable, Yuzhe Tang, Shuang Wang, Xiaoqian Jiang, Steve Chapin. \"Privacy-Preserving GWAS Analysis on Federated Genomic Datasets\", in BMC'15    May. 1, 2015: End of the class, Thank you!  Mar. 26, 2015: Schedule updated: [ Project ]!  Feb. 20, 2015: Mid-term report requirements added: [ Project ]!  Feb. 20, 2015: Presentation attacker added: [ Presentation ]!  Feb. 7, 2015: Presentation requirement added: [ Presentation ]!  Feb. 6, 2015: Project policy and resource updated!  Feb. 6, 2015: New presentation requriement: [ Schedule ]!  Jan. 30, 2015: Slides updated in [ Schedule ], and keywords updated in [ Papers ]!  Jan. 29, 2015: Presentation requriement updated in [ Schedule ]!  Jan. 27, 2015: Project topics updated!  Jan. 26, 2015: Slides updated in [ Schedule ]!  Jan. 23, 2015: Presenter fixed!  Jan. 21, 2015: Presenter updated!  Jan. 19, 2015: Schedule fixed!  Jan. 16, 2015: Project and schedule updated!  Jan. 15, 2015: Welcome!", 
            "title": "News"
        }, 
        {
            "location": "/syl/", 
            "text": "Syllabus\n\n\nOutline\n\n\nThe course focuses on advanced techniques used in distributed systems in cloud (e.g. Hadoop HBase). It will be organized as introductory lectures in the beginning, presentations of recent research papers, and programming projects based on open-source software. The course will emphasize core system properties such as performance, efficiency, and security. \n\n\nClass meetings\n\n\n\n\nWhen: Fr 9:30AM - 12:15PM\n\n\nWhere: Room 4-206K, Centre for Science \n Tech (CST)\n\n\n\n\nWho should take the course?\n\n\nThe course is primarily intended for PhD students (motivated master students are also welcome!) who are interested in cloud security and big-data systems.\n\n\nPrerequisite\n\n\nProgramming skills (Java or C++), and knowledge on security and operating systems.\n\n\nGrading policy\n\n\n\n\n\n\nSubmission of any work done by others will result in an F grade in the course, with the academic integrity violation reported to the University administration for further action. Violations include plagiarism, and usage of material available on the internet without proper attribution.*\n\n\n\n\n\n\nClass participation (10%)\n\n\n\n\nIn-class presentation (40%)\n\n\nProject (50%): A final project, including proposal, demo/presentation and write-up.\n\n\n\n\n\n\nMid-term presentation (15%, Mar. 1): write a 4-page report on project design\n\n\n\n\n\n\n\n\n\n\nFinal demo \n presentation (20%, Apr. 17)\n\n\n\n\n\n\n\n\n\n\nWrite-up / code (15%, May 1): write a 10-page or 12-page double-column report on refined project design, implementation, and benchmark results.\n\n\n\n\n\n\n\n\nOffice\n\n\n\n\nOffice: 4-193, CST, Yuzhe Tang\n\n\nEmail: ytang100@syr.edu (when you send email to me, include \n[CIS 700]\n in the subject.)\n\n\n\n\nTextbook?\n\n\nNo official textbooks required in the class; but there are classic books for reference [\nlink\n].", 
            "title": "Syllabus"
        }, 
        {
            "location": "/syl/#syllabus", 
            "text": "", 
            "title": "Syllabus"
        }, 
        {
            "location": "/syl/#outline", 
            "text": "The course focuses on advanced techniques used in distributed systems in cloud (e.g. Hadoop HBase). It will be organized as introductory lectures in the beginning, presentations of recent research papers, and programming projects based on open-source software. The course will emphasize core system properties such as performance, efficiency, and security.", 
            "title": "Outline"
        }, 
        {
            "location": "/syl/#class-meetings", 
            "text": "When: Fr 9:30AM - 12:15PM  Where: Room 4-206K, Centre for Science   Tech (CST)", 
            "title": "Class meetings"
        }, 
        {
            "location": "/syl/#who-should-take-the-course", 
            "text": "The course is primarily intended for PhD students (motivated master students are also welcome!) who are interested in cloud security and big-data systems.", 
            "title": "Who should take the course?"
        }, 
        {
            "location": "/syl/#prerequisite", 
            "text": "Programming skills (Java or C++), and knowledge on security and operating systems.", 
            "title": "Prerequisite"
        }, 
        {
            "location": "/syl/#grading-policy", 
            "text": "Submission of any work done by others will result in an F grade in the course, with the academic integrity violation reported to the University administration for further action. Violations include plagiarism, and usage of material available on the internet without proper attribution.*    Class participation (10%)   In-class presentation (40%)  Project (50%): A final project, including proposal, demo/presentation and write-up.    Mid-term presentation (15%, Mar. 1): write a 4-page report on project design      Final demo   presentation (20%, Apr. 17)      Write-up / code (15%, May 1): write a 10-page or 12-page double-column report on refined project design, implementation, and benchmark results.", 
            "title": "Grading policy"
        }, 
        {
            "location": "/syl/#office", 
            "text": "Office: 4-193, CST, Yuzhe Tang  Email: ytang100@syr.edu (when you send email to me, include  [CIS 700]  in the subject.)", 
            "title": "Office"
        }, 
        {
            "location": "/syl/#textbook", 
            "text": "No official textbooks required in the class; but there are classic books for reference [ link ].", 
            "title": "Textbook?"
        }, 
        {
            "location": "/sched/", 
            "text": "Schedule (tentative)\n\n\n\n\n\n\n\n\nDay of the class\n\n\nTopic\n\n\nPresenter\n\n\nAttaker\n\n\nSlides\n\n\n\n\n\n\n\n\n\n\nJan. 16\n\n\nIntroduction\n\n\nY. Tang\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\nJan. 23\n\n\nIntroduction\n\n\nY. Tang\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\nJan. 30\n\n\nPerformance isolation [\nlink\n]\n\n\nHaoyi Shi\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nPredictive perf. [\nlink\n]\n\n\nXing Zhi\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\nFeb. 07\n\n\nTrace analysis [\nlink\n]\n\n\nChunxu Tang\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nTail latency [\nlink\n]\n\n\nJinesh J.\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\nFeb. 13\n\n\nORAM [\nlink\n]\n\n\nV. Piduri\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nVerifiable computing [\nlink\n]\n\n\nQiuwen Chen\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\nFeb. 20\n\n\nMemory analysis \nmisc [\nlink\n]\n\n\nDuan Yue\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nIO optimization in kernel [\nlink\n]\n\n\nScott Constable\n\n\n\n\n[\nslides\n]\n\n\n\n\n\n\nFeb. 27\n\n\nMid-term talk\n\n\n\n\n\n\n[\nlink\n]\n\n\n\n\n\n\nMar. 06\n\n\nWorkload aware store [\nlink\n]\n\n\nQiuwen Chen\n\n\nSejal Lohiya\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nElastic store [\nlink\n]\n\n\nJing Jia\n\n\nHaoyi Shi\n\n\n[\nslides\n]\n\n\n\n\n\n\nMar. 13\n\n\nNo class (Spring break)\n\n\n\n\n\n\n\n\n\n\n\n\nMar. 20\n\n\nSGX [\nlink\n]\n\n\nScott Constable\n\n\nY. Tang\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nInformation flow [\nlink\n]\n\n\nDuan Yue\n\n\nJing Jia\n\n\n[\nslides\n]\n\n\n\n\n\n\nMar. 27\n\n\nDifferential privacy: apps [\nlink\n]\n\n\nNikhil C.\n\n\nWenqing Zhuang\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nDifferential privacy with MPC [\nlink\n]\n\n\nSuyashi Rathi\n\n\nChunxu Tang\n\n\n[\nslides\n]\n\n\n\n\n\n\nApr. 03\n\n\nOptimizing MPC [\nlink\n]\n\n\nXing Zhi\n\n\nV.Piduri\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nApplying MPC at scale [\nlink\n]\n\n\nSuyashi Rathi\n\n\nJinesh J.\n\n\n[\nslides\n\n\n\n\n\n\nApr. 10\n\n\nMPC compilers (1) [\nlink\n]\n\n\nScott Constable\n\n\nYuzhe Tang\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nMPC compilers (2) [\nlink\n]\n\n\nHaoyi Shi \n Chunxu Tang\n\n\nScott Constable\n\n\n[\nslides\n]\n\n\n\n\n\n\nApr. 17\n\n\nFinal demo/talk\n\n\n\n\n\n\n[\nlink\n]\n\n\n\n\n\n\nApr. 24\n\n\nConsistency [\nlink\n]\n\n\nWenqing Zhuang\n\n\nDuan Yue\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nNewSQL [\nlink\n]\n\n\nSejal Lohiya\n\n\nJinesh J.\n\n\n[\nslides\n]\n\n\n\n\n\n\n\n\nClass and Presentation\n\n\nEach class will be organized into the following three sessions (makeup session is for students who need to continue their presentation cut off in the last week):\n\n\n\n\n\n\n\n\nTime\n\n\nSessions\n\n\n\n\n\n\n\n\n\n\n9:30 -- 10:30 AM\n\n\nRegular session 1\n\n\n\n\n\n\n10:40 -- 11:40 AM\n\n\nRegular session 2\n\n\n\n\n\n\n11:40 -- 12:15 AM\n\n\nMakeup session\n\n\n\n\n\n\n\n\nFor each one-hour presentation, there should be around 15 minutes in the end for QA and discussions.\n\n\nFor each reading program (i.e. one topic presentation), you should read the papers with \n in depth, and read other papers briefly (e.g. on the \nIntroduction\n part) to compare and contrast those with \n .\n\n\nFor presenter, send me your slides prior to the day of the class. In addition, \neach presenter should also send me the following summarization information:\n\n\n\n\nFor each paper you read in depth (i.e. those with \n), write a short paragraph (no more than \nthree sentenses\n) that can best summarize the paper.\n\n\nFor each paper you read briefly, send me three phrases; each phrase should not be more than three words.", 
            "title": "Schedule"
        }, 
        {
            "location": "/sched/#schedule-tentative", 
            "text": "Day of the class  Topic  Presenter  Attaker  Slides      Jan. 16  Introduction  Y. Tang   [ slides ]    Jan. 23  Introduction  Y. Tang   [ slides ]    Jan. 30  Performance isolation [ link ]  Haoyi Shi   [ slides ]     Predictive perf. [ link ]  Xing Zhi   [ slides ]    Feb. 07  Trace analysis [ link ]  Chunxu Tang   [ slides ]     Tail latency [ link ]  Jinesh J.   [ slides ]    Feb. 13  ORAM [ link ]  V. Piduri   [ slides ]     Verifiable computing [ link ]  Qiuwen Chen   [ slides ]    Feb. 20  Memory analysis  misc [ link ]  Duan Yue   [ slides ]     IO optimization in kernel [ link ]  Scott Constable   [ slides ]    Feb. 27  Mid-term talk    [ link ]    Mar. 06  Workload aware store [ link ]  Qiuwen Chen  Sejal Lohiya  [ slides ]     Elastic store [ link ]  Jing Jia  Haoyi Shi  [ slides ]    Mar. 13  No class (Spring break)       Mar. 20  SGX [ link ]  Scott Constable  Y. Tang  [ slides ]     Information flow [ link ]  Duan Yue  Jing Jia  [ slides ]    Mar. 27  Differential privacy: apps [ link ]  Nikhil C.  Wenqing Zhuang  [ slides ]     Differential privacy with MPC [ link ]  Suyashi Rathi  Chunxu Tang  [ slides ]    Apr. 03  Optimizing MPC [ link ]  Xing Zhi  V.Piduri  [ slides ]     Applying MPC at scale [ link ]  Suyashi Rathi  Jinesh J.  [ slides    Apr. 10  MPC compilers (1) [ link ]  Scott Constable  Yuzhe Tang  [ slides ]     MPC compilers (2) [ link ]  Haoyi Shi   Chunxu Tang  Scott Constable  [ slides ]    Apr. 17  Final demo/talk    [ link ]    Apr. 24  Consistency [ link ]  Wenqing Zhuang  Duan Yue  [ slides ]     NewSQL [ link ]  Sejal Lohiya  Jinesh J.  [ slides ]", 
            "title": "Schedule (tentative)"
        }, 
        {
            "location": "/sched/#class-and-presentation", 
            "text": "Each class will be organized into the following three sessions (makeup session is for students who need to continue their presentation cut off in the last week):     Time  Sessions      9:30 -- 10:30 AM  Regular session 1    10:40 -- 11:40 AM  Regular session 2    11:40 -- 12:15 AM  Makeup session     For each one-hour presentation, there should be around 15 minutes in the end for QA and discussions.  For each reading program (i.e. one topic presentation), you should read the papers with   in depth, and read other papers briefly (e.g. on the  Introduction  part) to compare and contrast those with   .  For presenter, send me your slides prior to the day of the class. In addition, \neach presenter should also send me the following summarization information:   For each paper you read in depth (i.e. those with  ), write a short paragraph (no more than  three sentenses ) that can best summarize the paper.  For each paper you read briefly, send me three phrases; each phrase should not be more than three words.", 
            "title": "Class and Presentation"
        }, 
        {
            "location": "/pres/", 
            "text": "Presentation Requirement\n\n\nFor making slides and doing presentation efficiently, here is a check list:\n\n\n\n\nFocus on the intuition, get rid of formality (no formular!).\n\n\nInclude slide number!\n\n\nFewer slides; Make each slide a story!\n\n\nNever copy\npaste text from paper; tell the story in your own words!\n\n\nTalk about things you do understand, ignore things you don't (and admit it when being asked about).\n\n\nFollow the logic flow; make sure every word in a slide is explained before entering the slide!\n\n\n\n\nFor efficient paper reading, you might find this brochure useful: \"Efficient reading of papers in Science and Technology\" [\npdf\n]", 
            "title": "Presentation"
        }, 
        {
            "location": "/pres/#presentation-requirement", 
            "text": "For making slides and doing presentation efficiently, here is a check list:   Focus on the intuition, get rid of formality (no formular!).  Include slide number!  Fewer slides; Make each slide a story!  Never copy paste text from paper; tell the story in your own words!  Talk about things you do understand, ignore things you don't (and admit it when being asked about).  Follow the logic flow; make sure every word in a slide is explained before entering the slide!   For efficient paper reading, you might find this brochure useful: \"Efficient reading of papers in Science and Technology\" [ pdf ]", 
            "title": "Presentation Requirement"
        }, 
        {
            "location": "/proj/policy/", 
            "text": "Programming project\n\n\nPolicy\n\n\nProgramming project can be done individually or collaboratively (by two students).\nA list of sample topics can be given (talk to me for details). Or you can propose a project idea by your own (refer to [\nhere\n] for open-source cloudy software). \nThe only requriement for proposed project is that you need to do \nprogramming\n in some part to implement the proposed idea.\n\n\nProject related dicussion is on [\nPiazza\n]!\n\n\nTimeline\n\n\nProject proposal (Jan. 30)\n\n\nSubmit a one-page report, summarizing the context, movitation and goal of the proposed project.\n\n\nMid-term report (Feb. 27)\n\n\nDo a presentation, talk about your mid-term design of your project. \n\n\nWrite a four-page report, (scroll down to see the writing format). \nIn the report, you should include everything but implementation, including:\n\n\n\n\nIntroduction and motivation\n\n\nSpecific problem statement \n\n\nProposed approach\n\n\nSystem design and implementation plan\n\n\n\n\nsubmit your report through Blackboard.\n\n\nFinal demo (April. 17)\n\n\nShow the working of your project.\n\n\nFinal report (May. 1)\n\n\nFormal writeup about everything you did in your project. The final report should be at least 8 page long. You \nmust include all three things below\n in your final report.\n\n\n\n\nAll source code, and needed external library.\n\n\nREADME\n file to reproduce your final demo.\n\n\nA table with all information below.\n\n\n\n\n\n\n\n\n\n\nName\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nNumber of codelines (implemented by you)\n\n\n\n\n\n\n\n\nScale of performance study (number of nodes, data size)\n\n\n\n\n\n\n\n\nExternal review\n\n\n\n\n\n\n\n\n\n\nWriting format\n\n\n\n\nPapers must be written in LaTeX. The expected length is 4 pages (for mid-term report) and 8 pages (for final report), both EXCLUDING references. \n\n\nThe paper format should be typeset in two-column format in 10-point type\non 12-point (single-spaced) leading, with the text block being no more than\n6.5\" wide by 9\" deep. If you wish, you may use the USENIX LaTeX\ntemplates and style files [\nlink\n] (Don't use the Word template!).\n\n\n\n\nResources\n\n\nIf you need no more than 3 servers (per student), ask me about the virtual machine resources here in the CST building.\n\n\nIf you need more than 10 servers, ask me about the Emulab. Emulab, provided by the University of Utah, is an emulation environment for distributed systems (typically at the scale of less than 100 nodes). We have a project on Emulab, through which you can typically get 30- 50 physical machines for realistic system deployment and performance evaluation.", 
            "title": "Policy"
        }, 
        {
            "location": "/proj/policy/#programming-project", 
            "text": "", 
            "title": "Programming project"
        }, 
        {
            "location": "/proj/policy/#policy", 
            "text": "Programming project can be done individually or collaboratively (by two students).\nA list of sample topics can be given (talk to me for details). Or you can propose a project idea by your own (refer to [ here ] for open-source cloudy software). \nThe only requriement for proposed project is that you need to do  programming  in some part to implement the proposed idea.  Project related dicussion is on [ Piazza ]!", 
            "title": "Policy"
        }, 
        {
            "location": "/proj/policy/#timeline", 
            "text": "Project proposal (Jan. 30)  Submit a one-page report, summarizing the context, movitation and goal of the proposed project.  Mid-term report (Feb. 27)  Do a presentation, talk about your mid-term design of your project.   Write a four-page report, (scroll down to see the writing format). \nIn the report, you should include everything but implementation, including:   Introduction and motivation  Specific problem statement   Proposed approach  System design and implementation plan   submit your report through Blackboard.  Final demo (April. 17)  Show the working of your project.  Final report (May. 1)  Formal writeup about everything you did in your project. The final report should be at least 8 page long. You  must include all three things below  in your final report.   All source code, and needed external library.  README  file to reproduce your final demo.  A table with all information below.      Name  Value      Number of codelines (implemented by you)     Scale of performance study (number of nodes, data size)     External review      Writing format   Papers must be written in LaTeX. The expected length is 4 pages (for mid-term report) and 8 pages (for final report), both EXCLUDING references.   The paper format should be typeset in two-column format in 10-point type\non 12-point (single-spaced) leading, with the text block being no more than\n6.5\" wide by 9\" deep. If you wish, you may use the USENIX LaTeX\ntemplates and style files [ link ] (Don't use the Word template!).   Resources  If you need no more than 3 servers (per student), ask me about the virtual machine resources here in the CST building.  If you need more than 10 servers, ask me about the Emulab. Emulab, provided by the University of Utah, is an emulation environment for distributed systems (typically at the scale of less than 100 nodes). We have a project on Emulab, through which you can typically get 30- 50 physical machines for realistic system deployment and performance evaluation.", 
            "title": "Timeline"
        }, 
        {
            "location": "/proj/midterm/", 
            "text": "Mid-term presentation schedule\n\n\n\n\n\n\n\n\nPresenter\n\n\nTopic\n\n\n\n\n\n\n\n\n\n\nScott\n\n\nSecure MPC in genomic computation\n\n\n\n\n\n\nJinesh\n\n\nMcFS\n\n\n\n\n\n\nZhi\n\n\nJVM Profiling for Hadoop\n\n\n\n\n\n\nWenqing\n\n\nStatsD heap analyzer\n\n\n\n\n\n\nYue\n\n\nMobile app offloading from security perspective\n\n\n\n\n\n\nChunxu\n\n\nMulti-layer request level tracing in HBase/HDFS\n\n\n\n\n\n\nHaoyi\n\n\nRequest trace in Cloud\n\n\n\n\n\n\nNikhil\n\n\nRecommendation system for Diaspora social network\n\n\n\n\n\n\nQiuwen\n\n\nFriend recommendation for distributed social networks\n\n\n\n\n\n\nJing\n\n\nFriends recommendation for distributed social network\n\n\n\n\n\n\nVenkata\n\n\nQuery processing on bigdata\n\n\n\n\n\n\nSuyash\n\n\nEdit distance with MPC", 
            "title": "Midterm"
        }, 
        {
            "location": "/proj/midterm/#mid-term-presentation-schedule", 
            "text": "Presenter  Topic      Scott  Secure MPC in genomic computation    Jinesh  McFS    Zhi  JVM Profiling for Hadoop    Wenqing  StatsD heap analyzer    Yue  Mobile app offloading from security perspective    Chunxu  Multi-layer request level tracing in HBase/HDFS    Haoyi  Request trace in Cloud    Nikhil  Recommendation system for Diaspora social network    Qiuwen  Friend recommendation for distributed social networks    Jing  Friends recommendation for distributed social network    Venkata  Query processing on bigdata    Suyash  Edit distance with MPC", 
            "title": "Mid-term presentation schedule"
        }, 
        {
            "location": "/proj/final/", 
            "text": "Final presentation schedule\n\n\nSession 1\n\n\n\n\n\n\n\n\nPresenter\n\n\nTopic\n\n\n\n\n\n\n\n\n\n\nScott\n\n\nIntel SGX Emulation\n\n\n\n\n\n\nChunxu\n\n\nDynamic Tracing with Javassist in HBase\n\n\n\n\n\n\nHaoyi\n\n\nHamming distance in Wysteria\n\n\n\n\n\n\nNikhil\n\n\nRecommendation system for Diaspora social network\n\n\n\n\n\n\nZhi\n\n\nContext-Aware JVM Profiling for Hadoop\n\n\n\n\n\n\nVenkata\n\n\nInformed Database Schema Design for Column-Store\n\n\n\n\n\n\nWenqing\n\n\nStatsD heap analyzer\n\n\n\n\n\n\n\n\nSession 2\n\n\n\n\n\n\n\n\nPresenter\n\n\nTopic\n\n\n\n\n\n\n\n\n\n\nJinesh\n\n\nMcFS\n\n\n\n\n\n\nYue\n\n\nPrivacy-Preserving Offloading of Mobile App to the Public Cloud\n\n\n\n\n\n\nQiuwen\n\n\nFriend Recommendation Service for Distributed Social Networks\n\n\n\n\n\n\nJing\n\n\nFinding commond friends in distributed OSN", 
            "title": "Final"
        }, 
        {
            "location": "/proj/final/#final-presentation-schedule", 
            "text": "", 
            "title": "Final presentation schedule"
        }, 
        {
            "location": "/proj/final/#session-1", 
            "text": "Presenter  Topic      Scott  Intel SGX Emulation    Chunxu  Dynamic Tracing with Javassist in HBase    Haoyi  Hamming distance in Wysteria    Nikhil  Recommendation system for Diaspora social network    Zhi  Context-Aware JVM Profiling for Hadoop    Venkata  Informed Database Schema Design for Column-Store    Wenqing  StatsD heap analyzer", 
            "title": "Session 1"
        }, 
        {
            "location": "/proj/final/#session-2", 
            "text": "Presenter  Topic      Jinesh  McFS    Yue  Privacy-Preserving Offloading of Mobile App to the Public Cloud    Qiuwen  Friend Recommendation Service for Distributed Social Networks    Jing  Finding commond friends in distributed OSN", 
            "title": "Session 2"
        }, 
        {
            "location": "/readings/sys/", 
            "text": "Readings on system and performance\n\n\n\n\n indicates the required reading for class presentation.\n\n\n\n\n\n\nindicates optional/background reading.\n\n\n\n\n\n\n\n\nPerformance\n\n\n\n\nPredictive performance \ndb\n\n\n\n\n\n\n On Predictive Modeling for Optimizing Transaction Execution in Parallel OLTP Systems, VLDB12 [\npdf\n]: \npredict to optimize\n, \ndistributed transactions\n, \nstored procedure\n, \nworkload trace\n, \nMarkov modeling\n\n\n Performance and Resource Modeling in Highly-Concurrent OLTP Workloads, SIGMOD13\n[\npdf\n], \n[\nsrc\n]\n: \nlog\n, \nstatistic analysis\n, \nTPC-C/OLTP\n, \npredict bottleneck\n, \npredict resource consumption\n, \npredict throughput\n\n\nTowards Predicting Query Execution Time for Concurrent and Dynamic Database Workloads, VLDB13 [\npdf\n]\n\n\nAutomated analysis of multithreaded programs for performance modeling, SIGMETRICS14 [\npdf\n] (using SU network)\n\n\nUncertainty Aware Query Execution Time Prediction, VLDB14 [\npdf\n]\n\n\n\n\n\n\nPerformance isolation\n\n\n\n\n\n\n Performance Isolation and Fairness for Multi-Tenant Cloud Storage, OSDI12 [\nlink\n]: \nmulti-tenant kv store\n, \nsystem-wide fairness\n, \nutilization\n, \ndominant resource\n, \nlocal weight (re)allocation\n\n\n CPI2: CPU performance isolation for shared compute clusters, Eurosys13 [\npdf\n]: \nper-task CPI sampling\n, \nperf. counter\n, \nanomaly detection\n, \nhigh CPI is contention\n \n\n\nEnd-to-end Performance Isolation Through Virtual Datacenters, OSDI14 [\nlink\n]: \nnetwork isolation\n, \nisolated appliance\n\n\n\n\n\n\nRequest trace analysis\n\n\n\n\n\n\nThe Mystery Machine: End-to-end Performance Analysis of Large-scale Internet Services, OSDI14 [pdf]:  \nlogging with request id\n, \ntraces by request id\n, \nmodelling causal relations\n, \nhappens-before\n, \ncritical path/slack\n, \naggregate for probablistic model\n, \npredict based on history\n\n\n IntroPerf: Transparent Context-Sensitive Multi-Layer Performance Inference using System Stack Traces, SIGMETRICS14 [\npdf\n]: \nsystem stack trace\n, \nfunction call graph/tree\n, \ncall-path latency profiling\n, \ncall-path based debugging/patching\n\n\nTowards General-Purpose Resource Management in Shared Cloud Services, HotDep14 [\npdf\n, \nslides\n], NSDI15: \nperformance versus resource sharing\n, \ntracing and resource profiling\n, \napplication/src-level resource modeling\n, \ncontrol points\n\n\nNon-intrusive, Out-of-band and Out-of-the-box Systems Monitoring in the Cloud, SIGMETRICS14 [\npdf\n]: \nVM monitoring\n\n\n\n\n\n\nSo, you want to trace your distributed system? Key design insights from years of practical experience, CMU-TR 2014, [\npdf\n]: \nrequest tracing\n, \n(survey)\n\n\n\n\n\n\n\n\n\n\nDapper, a Large-Scale Distributed Systems Tracing Infrastructure, Google technical report, 2010: \ntracing\n\n\n\n\n\n\nDetecting large-scale system problems by mining console logs, ICML10 [\npdf\n], SOSP09 [\npdf\n]: \nconsole log\n, \nstitching logs by static analysis\n\n\n\n\n\n\nlprof: A Non-intrusive Request Flow Profiler for Distributed Systems, OSDI14: \nstitching logs by static analysis\n, \nnon-intrusive tracing\n, \nperf. bug verified by patch\n\n\n\n\n\n\n\n\n\n\nTail latency\n\n\n\n\n\n\n Tales of the Tail: Hardware, OS, and Application-level Sources of Tail Latency, SOCC14 [\npdf\n]: \nlatency variance\n, \ncauses of tails\n, \nsharing\n, \nscheduler:pin-core\n, \nsingle-queue reduces latency\n, \nno remote access in NUMA\n, \ninterrupt isolation by dedicated core\n\n\n Bobtail: Avoiding Long Tails in the Cloud, NSDI13: \nvm scheduling\n, \nvm responsiveness by sleep-and-wake\n\n\n The Tail at Scale, CACM10 [\npdf\n] (using SU network): \ntail tolerance\n, \none finish, cancel others\n, \nduplicated requests\n, \nif works fine in small, then move on to large-scale execution\n\n\nC3: Cutting Tail Latency in Cloud Data Stores via Adaptive Replica Selection, NSDI15 [\npdf\n]\n\n\nCosTLO: Cost-Effective Redundancy for Lower Latency Variance on Cloud Storage Services,  NSDI15\n\n\n\n\nDistributed storage system (NoSQL)\n\n\n\n\nNot-Only-SQL\n\n\n\n\n\n\n Spanner: Google's Globally-Distributed Database [\ncockroach\n]\n\n\n F1: A Distributed SQL Database That Scales\n\n\n\n\n\n\nNew SQL: An Alternative to NoSQL and Old SQL for New OLTP Apps\n\n\n\n\n\n\n\n\n\n\nOnto multi-cloud\n\n\n\n\n\n\n A Self-Configurable Geo-Replicated Cloud Storage System, OSDI14 [pdf]: \nmulti-datacenter\n\n\n Customizable and Extensible Deployment for Mobile/Cloud Applications, OSDI14 [\npdf\n]: \nmobile/cloud\n\n\n SPANStore: cost-effective geo-replicated storage spanning multiple cloud services, SOSP13 [pdf]: \nmulti-cloud\n\n\nSimba: Tunable End-to-End Data Consistency for Mobile Apps, Eurosys15 [\npdf\n]: \nmobile/cloud\n, \nnosql\n\n\nStronger Semantics for Low-Latency Geo-Replicated Storage, NSDI13\n\n\nThe Hybrex model for confidentiality and privacy in cloud computing, HotCloud11, \nhybrid-cloud\n\n\n\n\n\n\nKernel optimization for IO at bare-metal speed\n\n\n\n\n\n\n Arrakis: The Operating System is the Control Plane, OSDI14: \ncontrol plane in kernel\n, \ndata plane out of kernel\n, \nLibOS\n, \ncapacity\n, \nIntel VT\n, \ndisk/network IO\n\n\n IX: A Protected Dataplane Operating System for High Throughput and Low Latency, OSDI14\n\n\n\n\n\n\nCold-data storage\n\n\n\n\n\n\n Pelican: A Building Block for Exascale Cold Data Storage, OSDI14 [pdf]: \nrack-scale computing\n, \nenergy/cooling\n, \ncold data\n, \ndisk spin up/down\n, \nlow throughput\n\n\n f4: Facebook's Warm BLOB Storage System, OSDI14 [pdf]: \nRAID at rack-scale\n, \nerror-correcting code\n\n\nCharacterizing Storage Workloads with Counter Stacks, OSDI14 [pdf]\n\n\n\n\n\n\nElasticity\n\n\n\n\n\n\n E-Store: Fine-Grained Elastic Partitioning for Distributed Transaction Processing Systems, VLDB14 [pdf]: \nhot data fine partitioned\n, \ncold data coarsely partitioned\n\n\n Benchmarking Scalability and Elasticity of Distributed Database Systems, VLDB14 [pdf]\n\n\nMET: Workload aware elasticity for NoSQL, EuroSys13 [pdf]\n\n\n\n\n\n\nOn Scale Independence for Querying Big Data [PODS14]\n\n\n\n\n\n\n\n\n\n\nConsistency\n\n\n\n\n\n\n Caelus: Verifying the Consistency of Cloud Services with Battery-Powered Devices, SP15 \n[\npdf\n]\n\n\n Consistency-based service level agreements for cloud storage, SOSP13\n\n\n Probabilistically Bounded Staleness for Practical Partial Quorums, VLDB12\n\n\n Salt: Combining ACID and BASE in a Distributed Database, OSDI14\n\n\nScalable Atomic Visibility with RAMP Transactions, SIGMOD14\n\n\n\n\n\n\nCAP theorem: Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services\n\n\n\n\n\n\n\n\n\n\nCAP theorem in plain english [\nlink\n]\n\n\n\n\n\n\n\n\n\n\nFault tolerance\n\n\n\n\n\n\n SAMC: Semantic-Aware Model Checking for Fast Discovery of Deep Bugs in Cloud Systems, OSDI14\n\n\n Torturing Databases for Fun and Profit, OSDI14\n\n\n Limplock: Understanding the Impact of Limpware on Scale-Out Cloud Systems, SOCC13", 
            "title": "System papers"
        }, 
        {
            "location": "/readings/sys/#readings-on-system-and-performance", 
            "text": "indicates the required reading for class presentation.    indicates optional/background reading.", 
            "title": "Readings on system and performance"
        }, 
        {
            "location": "/readings/sys/#performance", 
            "text": "Predictive performance  db     On Predictive Modeling for Optimizing Transaction Execution in Parallel OLTP Systems, VLDB12 [ pdf ]:  predict to optimize ,  distributed transactions ,  stored procedure ,  workload trace ,  Markov modeling   Performance and Resource Modeling in Highly-Concurrent OLTP Workloads, SIGMOD13\n[ pdf ], \n[ src ]\n:  log ,  statistic analysis ,  TPC-C/OLTP ,  predict bottleneck ,  predict resource consumption ,  predict throughput  Towards Predicting Query Execution Time for Concurrent and Dynamic Database Workloads, VLDB13 [ pdf ]  Automated analysis of multithreaded programs for performance modeling, SIGMETRICS14 [ pdf ] (using SU network)  Uncertainty Aware Query Execution Time Prediction, VLDB14 [ pdf ]    Performance isolation     Performance Isolation and Fairness for Multi-Tenant Cloud Storage, OSDI12 [ link ]:  multi-tenant kv store ,  system-wide fairness ,  utilization ,  dominant resource ,  local weight (re)allocation   CPI2: CPU performance isolation for shared compute clusters, Eurosys13 [ pdf ]:  per-task CPI sampling ,  perf. counter ,  anomaly detection ,  high CPI is contention    End-to-end Performance Isolation Through Virtual Datacenters, OSDI14 [ link ]:  network isolation ,  isolated appliance    Request trace analysis    The Mystery Machine: End-to-end Performance Analysis of Large-scale Internet Services, OSDI14 [pdf]:   logging with request id ,  traces by request id ,  modelling causal relations ,  happens-before ,  critical path/slack ,  aggregate for probablistic model ,  predict based on history   IntroPerf: Transparent Context-Sensitive Multi-Layer Performance Inference using System Stack Traces, SIGMETRICS14 [ pdf ]:  system stack trace ,  function call graph/tree ,  call-path latency profiling ,  call-path based debugging/patching  Towards General-Purpose Resource Management in Shared Cloud Services, HotDep14 [ pdf ,  slides ], NSDI15:  performance versus resource sharing ,  tracing and resource profiling ,  application/src-level resource modeling ,  control points  Non-intrusive, Out-of-band and Out-of-the-box Systems Monitoring in the Cloud, SIGMETRICS14 [ pdf ]:  VM monitoring    So, you want to trace your distributed system? Key design insights from years of practical experience, CMU-TR 2014, [ pdf ]:  request tracing ,  (survey)      Dapper, a Large-Scale Distributed Systems Tracing Infrastructure, Google technical report, 2010:  tracing    Detecting large-scale system problems by mining console logs, ICML10 [ pdf ], SOSP09 [ pdf ]:  console log ,  stitching logs by static analysis    lprof: A Non-intrusive Request Flow Profiler for Distributed Systems, OSDI14:  stitching logs by static analysis ,  non-intrusive tracing ,  perf. bug verified by patch      Tail latency     Tales of the Tail: Hardware, OS, and Application-level Sources of Tail Latency, SOCC14 [ pdf ]:  latency variance ,  causes of tails ,  sharing ,  scheduler:pin-core ,  single-queue reduces latency ,  no remote access in NUMA ,  interrupt isolation by dedicated core   Bobtail: Avoiding Long Tails in the Cloud, NSDI13:  vm scheduling ,  vm responsiveness by sleep-and-wake   The Tail at Scale, CACM10 [ pdf ] (using SU network):  tail tolerance ,  one finish, cancel others ,  duplicated requests ,  if works fine in small, then move on to large-scale execution  C3: Cutting Tail Latency in Cloud Data Stores via Adaptive Replica Selection, NSDI15 [ pdf ]  CosTLO: Cost-Effective Redundancy for Lower Latency Variance on Cloud Storage Services,  NSDI15", 
            "title": "Performance"
        }, 
        {
            "location": "/readings/sys/#distributed-storage-system-nosql", 
            "text": "Not-Only-SQL     Spanner: Google's Globally-Distributed Database [ cockroach ]   F1: A Distributed SQL Database That Scales    New SQL: An Alternative to NoSQL and Old SQL for New OLTP Apps      Onto multi-cloud     A Self-Configurable Geo-Replicated Cloud Storage System, OSDI14 [pdf]:  multi-datacenter   Customizable and Extensible Deployment for Mobile/Cloud Applications, OSDI14 [ pdf ]:  mobile/cloud   SPANStore: cost-effective geo-replicated storage spanning multiple cloud services, SOSP13 [pdf]:  multi-cloud  Simba: Tunable End-to-End Data Consistency for Mobile Apps, Eurosys15 [ pdf ]:  mobile/cloud ,  nosql  Stronger Semantics for Low-Latency Geo-Replicated Storage, NSDI13  The Hybrex model for confidentiality and privacy in cloud computing, HotCloud11,  hybrid-cloud    Kernel optimization for IO at bare-metal speed     Arrakis: The Operating System is the Control Plane, OSDI14:  control plane in kernel ,  data plane out of kernel ,  LibOS ,  capacity ,  Intel VT ,  disk/network IO   IX: A Protected Dataplane Operating System for High Throughput and Low Latency, OSDI14    Cold-data storage     Pelican: A Building Block for Exascale Cold Data Storage, OSDI14 [pdf]:  rack-scale computing ,  energy/cooling ,  cold data ,  disk spin up/down ,  low throughput   f4: Facebook's Warm BLOB Storage System, OSDI14 [pdf]:  RAID at rack-scale ,  error-correcting code  Characterizing Storage Workloads with Counter Stacks, OSDI14 [pdf]    Elasticity     E-Store: Fine-Grained Elastic Partitioning for Distributed Transaction Processing Systems, VLDB14 [pdf]:  hot data fine partitioned ,  cold data coarsely partitioned   Benchmarking Scalability and Elasticity of Distributed Database Systems, VLDB14 [pdf]  MET: Workload aware elasticity for NoSQL, EuroSys13 [pdf]    On Scale Independence for Querying Big Data [PODS14]      Consistency     Caelus: Verifying the Consistency of Cloud Services with Battery-Powered Devices, SP15 \n[ pdf ]   Consistency-based service level agreements for cloud storage, SOSP13   Probabilistically Bounded Staleness for Practical Partial Quorums, VLDB12   Salt: Combining ACID and BASE in a Distributed Database, OSDI14  Scalable Atomic Visibility with RAMP Transactions, SIGMOD14    CAP theorem: Brewer's conjecture and the feasibility of consistent, available, partition-tolerant web services      CAP theorem in plain english [ link ]      Fault tolerance     SAMC: Semantic-Aware Model Checking for Fast Discovery of Deep Bugs in Cloud Systems, OSDI14   Torturing Databases for Fun and Profit, OSDI14   Limplock: Understanding the Impact of Limpware on Scale-Out Cloud Systems, SOCC13", 
            "title": "Distributed storage system (NoSQL)"
        }, 
        {
            "location": "/readings/sec/", 
            "text": "Readings on security\n\n\n\n\n indicates the required reading for class presentation.\n\n\n\n\n\n\nindicates optional/background reading.\n\n\n\n\n\n\n\n\nDifferential privacy\n\n\n\n\nPractice\n\n\n\n\n\n\n Privacy in Pharmacogenetics: An End-to-End Case Study of Personalized Warfarin Dosing, SEC14 [pdf]\n\n\n PINQ: Privacy Integrated Queries, SIGMOD09, [\npdf\n]: \ndp-sql\n\n\nDistance Makes the Types Grow Stronger: A Calculus for Differential Privacy, ICFP10 [\npdf\n]: \ndp-pl\n\n\n\n\n\n\nTheory\n\n\n\n\n\n\n Differential Privacy, [\npdf\n]\n\n\n Practical Differential Privacy via Grouping and Smoothing, VLDB13 : \nnon-interactive dp\n\n\nAnalyzing Graphs with Node Differential Privacy, TCC13 [\npdf\n]: \ndp-graph\n\n\nSmooth Sensitivity and Sampling in Private Data Analysis, STOC07 [\npdf\n]: \ndp-clustering\n\n\nPrivacy, Accuracy, and Consistency Too: A Holistic Solution to Contingency Table Release, PODS07, [\npdf\n]: \ndp-olapcube\n\n\nMembership Privacy: A Unifying Framework For Privacy Definitions, CCS13 [pdf]\n\n\n\n\n\n\nDifferential Privacy: A Survey of Results, TAMC 2008 [\npdf\n]\n\n\n\n\n\n\n\n\n\n\nBlowfish Privacy: Tuning Privacy-Utility Trade-offs using Policies, SIGMOD14 [pdf]\n\n\n\n\n\n\n\n\n\n\nNo Free Lunch in Data Privacy, ICDM11 [\npdf\n]\n\n\n\n\n\n\n\n\nMulti-party computations\n\n\n\n\nORAM (access pattern privacy, non-circuit model)\n\n\n\n\n\n\n Automating Efficient RAM-Model Secure Computation, SP14\n\n\nBurst ORAM: Minimizing ORAM Response Times for Bursty Access Patterns, SEC14 \n\n\n\n\n\n\nPerformance optimization\n\n\n\n\n\n\n Faster Private Set Intersection Based on OT Extension, SEC14: \nOT extensions for batched OTs\n, \nnetwork as bottleneck\n, \nsemi-honest\n, \nuse symmetric encryption not asymmetric\n\n\n\n\n\n\nFaster Secure Two-Party Computation Using Garbled Circuits, SEC11 [\npdf\n], [\nsrc\n]: \nprotocol optimization\n\n\n\n\n\n\n\n\n\n\nCompiler and runtime systems (1)\n\n\n\n\n\n\n Wysteria: A Programming Language for Generic, Mixed-mode Multiparty Computations, SP14 [\npdf\n]: \nMPC\n, \nmixed-mode\n, \nGC for 2PC\n, \nSS for MPC\n\n\n FairplayMP - A Secure Multi-Party Computation System, CCS08, [\npdf\n]:\nSS + GC\n, \nMPC\n\n\nAutomatically optimizing secure computation, CCS11: \nmixed-mode\n\n\nSecure Multi-Party Computation of Boolean Circuits with Applications to Privacy in On-Line Marketplaces, 12, [\npdf\n]: \nMPC\n, \nruntime\n, \nGMW\n\n\n\n\n\n\nCompiler and runtime systems (2)\n\n\n\n\n\n\n PICCO: A General-Purpose Compiler for Private Distributed Computation, CCS13 [\npdf\n]: \nSS\n, \nMPC\n\n\n ABY \u2013 A Framework for Efficient Mixed-Protocol Secure Two-Party Computation, NDSS15 [\npdf\n]: \nmixed-protocols\n\n\nPCF: a portable circuit format for scalable two-party secure computation, SEC13 [\npdf\n], [\nsrc\n], [\nvideo\n]: \nruntime/jit circuit generation\n, \ncompiler optimization\n, \nGC\n\n\n\n\n\n\nFairplay \u2014 A Secure Two-Party Computation System, SEC04, [\npdf\n]: \nprogramming system\n, \n2PC\n\n\n\n\n\n\n\n\n\n\nEnabling new applications\n\n\n\n\n\n\n Blind Seer: A Scalable Private DBMS [\npdf\n], SP14: \nquery on encrypted data\n, \nbloom filter merge tree\n, \nindex tree on unordered dataset\n\n\nANONIZE: A Large-Scale Anonymous Survey System, SP14: \nanonymity between surveyee and result\n, \n`cryptographic app\n, \nno agg\n\n\n Secure Multiparty Computations on Bitcoin, SP14\n\n\nPrivate search on key-value stores with hierarchical indexes, ICDE14\n\n\n\n\n\n\nDifferentially private multi-party computation\n\n\n\n\n\n\n Our data, Ourselves: Privacy via distributed noise generation, EUROCRYPT06 [\npdf\n]: \nlaplace noising without floating-point numbers\n, \nsecret sharing\n\n\n RAPPOR: Randomized Aggregatable Privacy-Preserving Ordinal Response, CCS14: \nrandomized responses\n\n\n DJoin: Differentially Private Join Queries over Distributed Databases, OSDI 2012.\n\n\nThe limits of two-party differential privacy, 2010.\n\n\n\n\nCloud security\n\n\n\n\nSGX\n\n\n\n\n\n\n VC3: Trustworthy Data Analytics in the Cloud, MSR-TR-2014-39 [\npdf\n]: \nMapReduce on SGX\n\n\n Shielding Applications from an Untrusted Cloud with Haven, SOSP14 [\npdf\n]\n\n\nICE: A Passive, High-Speed, State-Continuity Scheme, ACSAC14\n\n\n\n\n\n\nUsing Innovative Instructions to Create Trustworthy Software Solutions [\npdf\n]\n\n\n\n\n\n\n\n\n\n\nSoftware guard extensions programming reference, Intel Corp., 2013. No. 329298-001\n\n\n\n\n\n\n\n\n\n\nTrInc: small trusted hardware for large distributed systems, NSDI09\n\n\n\n\n\n\n\n\n\n\nVerifiable computation\n\n\n\n\n\n\n Succinct Non-Interactive Zero Knowledge for a von Neumann Architecture, SEC14 [\npdf\n], SNARKs-for-C [\nsrc\n]\n\n\nPinocchio: Nearly Practical Verifiable Computation, SP13 [\npdf\n], [\nsrc\n] \n\n\nVerifying computations with state, SOSP13 [pdf]: \nproof-based verification\n, \nuntrusted storage\n, \nmap reduce\n\n\nTRUESET: Faster Verifiable Set Computations, SEC14\n\n\n\n\n\n\n\nMisc.\n\n\n\n\nMalware detection and reverse engineering\n\n\n\n\n\n\nBareCloud: Bare-metal Analysis-based Evasive Malware Detection, SEC14: \nmalware detection by comparison\n\n\nDSCRETE: Automatic Rendering of Forensic Information from Memory Images via Application Logic Reuse, SEC14: \nreverse engineering\n, \nlocate binary of a function\n, \nfeeding new input to binary function\n\n\n\n\n\n\nInformation flow analysis\n\n\n\n\n\n\n Quantifying Information Flow for Dynamic Secrets, SP14\n\n\n Quantitative information flow as network flow capacity, PLDI08 [\npdf\n] \nquantitative i.f.\n\n\nBootstrapping Privacy Compliance in Big Data Systems, SP14\n\n\n\n\n\n\nSearcheable encryption\n\n\n\n\n\n\n  Dynamic Searchable Encryption via Blind Storage, SP14\n\n\nCryptDB: Protecting Confidentiality with Encrypted Query Processing, SOSP12 [\npdf\n]\n\n\n\n\n\n\nSide-channel attacks\n\n\n\n\n\n\nScheduler-based Defenses against Cross-VM Side-channels, SEC14\n\n\nPreventing Cryptographic Key Leakage in Cloud Virtual Machines, SEC14", 
            "title": "Security papers"
        }, 
        {
            "location": "/readings/sec/#readings-on-security", 
            "text": "indicates the required reading for class presentation.    indicates optional/background reading.", 
            "title": "Readings on security"
        }, 
        {
            "location": "/readings/sec/#differential-privacy", 
            "text": "Practice     Privacy in Pharmacogenetics: An End-to-End Case Study of Personalized Warfarin Dosing, SEC14 [pdf]   PINQ: Privacy Integrated Queries, SIGMOD09, [ pdf ]:  dp-sql  Distance Makes the Types Grow Stronger: A Calculus for Differential Privacy, ICFP10 [ pdf ]:  dp-pl    Theory     Differential Privacy, [ pdf ]   Practical Differential Privacy via Grouping and Smoothing, VLDB13 :  non-interactive dp  Analyzing Graphs with Node Differential Privacy, TCC13 [ pdf ]:  dp-graph  Smooth Sensitivity and Sampling in Private Data Analysis, STOC07 [ pdf ]:  dp-clustering  Privacy, Accuracy, and Consistency Too: A Holistic Solution to Contingency Table Release, PODS07, [ pdf ]:  dp-olapcube  Membership Privacy: A Unifying Framework For Privacy Definitions, CCS13 [pdf]    Differential Privacy: A Survey of Results, TAMC 2008 [ pdf ]      Blowfish Privacy: Tuning Privacy-Utility Trade-offs using Policies, SIGMOD14 [pdf]      No Free Lunch in Data Privacy, ICDM11 [ pdf ]", 
            "title": "Differential privacy"
        }, 
        {
            "location": "/readings/sec/#multi-party-computations", 
            "text": "ORAM (access pattern privacy, non-circuit model)     Automating Efficient RAM-Model Secure Computation, SP14  Burst ORAM: Minimizing ORAM Response Times for Bursty Access Patterns, SEC14     Performance optimization     Faster Private Set Intersection Based on OT Extension, SEC14:  OT extensions for batched OTs ,  network as bottleneck ,  semi-honest ,  use symmetric encryption not asymmetric    Faster Secure Two-Party Computation Using Garbled Circuits, SEC11 [ pdf ], [ src ]:  protocol optimization      Compiler and runtime systems (1)     Wysteria: A Programming Language for Generic, Mixed-mode Multiparty Computations, SP14 [ pdf ]:  MPC ,  mixed-mode ,  GC for 2PC ,  SS for MPC   FairplayMP - A Secure Multi-Party Computation System, CCS08, [ pdf ]: SS + GC ,  MPC  Automatically optimizing secure computation, CCS11:  mixed-mode  Secure Multi-Party Computation of Boolean Circuits with Applications to Privacy in On-Line Marketplaces, 12, [ pdf ]:  MPC ,  runtime ,  GMW    Compiler and runtime systems (2)     PICCO: A General-Purpose Compiler for Private Distributed Computation, CCS13 [ pdf ]:  SS ,  MPC   ABY \u2013 A Framework for Efficient Mixed-Protocol Secure Two-Party Computation, NDSS15 [ pdf ]:  mixed-protocols  PCF: a portable circuit format for scalable two-party secure computation, SEC13 [ pdf ], [ src ], [ video ]:  runtime/jit circuit generation ,  compiler optimization ,  GC    Fairplay \u2014 A Secure Two-Party Computation System, SEC04, [ pdf ]:  programming system ,  2PC      Enabling new applications     Blind Seer: A Scalable Private DBMS [ pdf ], SP14:  query on encrypted data ,  bloom filter merge tree ,  index tree on unordered dataset  ANONIZE: A Large-Scale Anonymous Survey System, SP14:  anonymity between surveyee and result ,  `cryptographic app ,  no agg   Secure Multiparty Computations on Bitcoin, SP14  Private search on key-value stores with hierarchical indexes, ICDE14    Differentially private multi-party computation     Our data, Ourselves: Privacy via distributed noise generation, EUROCRYPT06 [ pdf ]:  laplace noising without floating-point numbers ,  secret sharing   RAPPOR: Randomized Aggregatable Privacy-Preserving Ordinal Response, CCS14:  randomized responses   DJoin: Differentially Private Join Queries over Distributed Databases, OSDI 2012.  The limits of two-party differential privacy, 2010.", 
            "title": "Multi-party computations"
        }, 
        {
            "location": "/readings/sec/#cloud-security", 
            "text": "SGX     VC3: Trustworthy Data Analytics in the Cloud, MSR-TR-2014-39 [ pdf ]:  MapReduce on SGX   Shielding Applications from an Untrusted Cloud with Haven, SOSP14 [ pdf ]  ICE: A Passive, High-Speed, State-Continuity Scheme, ACSAC14    Using Innovative Instructions to Create Trustworthy Software Solutions [ pdf ]      Software guard extensions programming reference, Intel Corp., 2013. No. 329298-001      TrInc: small trusted hardware for large distributed systems, NSDI09      Verifiable computation     Succinct Non-Interactive Zero Knowledge for a von Neumann Architecture, SEC14 [ pdf ], SNARKs-for-C [ src ]  Pinocchio: Nearly Practical Verifiable Computation, SP13 [ pdf ], [ src ]   Verifying computations with state, SOSP13 [pdf]:  proof-based verification ,  untrusted storage ,  map reduce  TRUESET: Faster Verifiable Set Computations, SEC14", 
            "title": "Cloud security"
        }, 
        {
            "location": "/readings/sec/#misc", 
            "text": "Malware detection and reverse engineering    BareCloud: Bare-metal Analysis-based Evasive Malware Detection, SEC14:  malware detection by comparison  DSCRETE: Automatic Rendering of Forensic Information from Memory Images via Application Logic Reuse, SEC14:  reverse engineering ,  locate binary of a function ,  feeding new input to binary function    Information flow analysis     Quantifying Information Flow for Dynamic Secrets, SP14   Quantitative information flow as network flow capacity, PLDI08 [ pdf ]  quantitative i.f.  Bootstrapping Privacy Compliance in Big Data Systems, SP14    Searcheable encryption      Dynamic Searchable Encryption via Blind Storage, SP14  CryptDB: Protecting Confidentiality with Encrypted Query Processing, SOSP12 [ pdf ]    Side-channel attacks    Scheduler-based Defenses against Cross-VM Side-channels, SEC14  Preventing Cryptographic Key Leakage in Cloud Virtual Machines, SEC14", 
            "title": "Misc."
        }, 
        {
            "location": "/references/", 
            "text": "Books\n\n\n\n\nCloud systems\n\n\n\n\nThe Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines, Second Edition, Luiz Andr\u00e9 Barroso, Jimmy Clidaras, Urs H\u00f6lzle,\n[\nonline-pdf\n] (Using SU network)\n\n\n\n\nCryptography\n\n\n\n\nHandbook of Applied Cryptography, Alfred J. Menezes, Paul C. van Oorschot and Scott A. Vanstone,\n[\nonline-pdf\n]\n\n\n\n\nBuilding secure systems\n\n\n\n\nSecurity Basics for Computer Architects, Ruby B. Lee,\n[\nonline-pdf\n]\n\n\n\n\nDatabase systems\n\n\n\n\nReadings in database systems,  Fourth Edition, Joseph M. Hellerstein, Michael Stonebraker,\n[\nonline-pdf\n] (Anatomy of a Database System)\n\n\n\n\nMisc\n\n\n\n\nThe Algorithmic Foundations of Differential Privacy, 2014, [\npdf\n]\n\n\nSecure Multiparty Computation and Secret Sharing: An Information Theoretic Approach, 2013, [\npdf\n]\n\n\nYao\u2019s Garbled Circuits: Recent Directions and Implementations, [\npdf\n]\n\n\nSecure Computation: A Technical Primer, [\npdf\n]\n\n\n\n\n\n\nOpen-source software\n\n\n\n\nHadoop\n\n\n\n\nHadoop [\nlink\n]\n\n\nSpark [\nlink\n]\n\n\nImpala [\nlink\n]\n\n\nStorm [\nlink\n]\n\n\n\n\nNoSQL\n\n\n\n\nHBase [\nlink\n]\n\n\nHTrace [\nlink\n]\n\n\nPheonix [\nlink\n], ActorDB [\nlink\n], \n\n\nDrill [\nlink\n]\n\n\nTitan [\nlink\n],\n\n\nLevelDB [\nlink\n]\n\n\n\n\nSecurity\n\n\n\n\nPinocchio [\nlink\n], SNARKs-for-C [\nlink\n].", 
            "title": "References"
        }, 
        {
            "location": "/references/#books", 
            "text": "", 
            "title": "Books"
        }, 
        {
            "location": "/references/#cloud-systems", 
            "text": "The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines, Second Edition, Luiz Andr\u00e9 Barroso, Jimmy Clidaras, Urs H\u00f6lzle,\n[ online-pdf ] (Using SU network)", 
            "title": "Cloud systems"
        }, 
        {
            "location": "/references/#cryptography", 
            "text": "Handbook of Applied Cryptography, Alfred J. Menezes, Paul C. van Oorschot and Scott A. Vanstone,\n[ online-pdf ]", 
            "title": "Cryptography"
        }, 
        {
            "location": "/references/#building-secure-systems", 
            "text": "Security Basics for Computer Architects, Ruby B. Lee,\n[ online-pdf ]", 
            "title": "Building secure systems"
        }, 
        {
            "location": "/references/#database-systems", 
            "text": "Readings in database systems,  Fourth Edition, Joseph M. Hellerstein, Michael Stonebraker,\n[ online-pdf ] (Anatomy of a Database System)", 
            "title": "Database systems"
        }, 
        {
            "location": "/references/#misc", 
            "text": "The Algorithmic Foundations of Differential Privacy, 2014, [ pdf ]  Secure Multiparty Computation and Secret Sharing: An Information Theoretic Approach, 2013, [ pdf ]  Yao\u2019s Garbled Circuits: Recent Directions and Implementations, [ pdf ]  Secure Computation: A Technical Primer, [ pdf ]", 
            "title": "Misc"
        }, 
        {
            "location": "/references/#open-source-software", 
            "text": "", 
            "title": "Open-source software"
        }, 
        {
            "location": "/references/#hadoop", 
            "text": "Hadoop [ link ]  Spark [ link ]  Impala [ link ]  Storm [ link ]", 
            "title": "Hadoop"
        }, 
        {
            "location": "/references/#nosql", 
            "text": "HBase [ link ]  HTrace [ link ]  Pheonix [ link ], ActorDB [ link ],   Drill [ link ]  Titan [ link ],  LevelDB [ link ]", 
            "title": "NoSQL"
        }, 
        {
            "location": "/references/#security", 
            "text": "Pinocchio [ link ], SNARKs-for-C [ link ].", 
            "title": "Security"
        }
    ]
}