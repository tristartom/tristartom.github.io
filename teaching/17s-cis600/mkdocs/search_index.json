{
    "docs": [
        {
            "location": "/", 
            "text": "CIS600 Applied Cryptography\n\n\n\n\nInstructor: Yuzhe (Richard) Tang\n\n\nTime: MW 10:35 - 11:55 am\n\n\nPlace: Link Hall 211\n\n\n\n\nReading materials\n\n\n\n\nTextbooks \n\n\nIntroduction to Modern Cryptography (2nd edition), Jonathan Katz and Yehuda Lindell, (\nKL\n) \n\n\nCryptography Engineering: Design Principles and Practical Applications, 1st Edition, Niels Ferguson, Bruce Schneier, Tadayoshi Kohno (\nFSK\n)\n\n\nPrinciples of Computer System Design: An Introduction, Information Security (Chapter 11), Jerome H. Saltzer, M. Frans Kaashoek, [\nonline book\n], (\nSK\n)\n\n\n\n\n\n\nOther useful books\n\n\nBitcoin and Cryptocurrency Technologies, Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, Steven Goldfeder, [\nonline book\n], (\nBitCoin\n)\n\n\nIntel SGX Explained, Victor Costan, Srinivas Devadas, [\npdf\n], (\nSGX\n)\n\n\nNetwork Security with OpenSSL, Pravir Chandra, Matt Messier, John Viega (\nOpenSSL\n)\n\n\nA course in cryptography, Rafael Pass, abhi shelat (\nPS\n)\n\n\n\n\n\n\n\n\nSyllabus\n\n\n[\npdf\n]\n\n\nSchedule\n\n\n\n\n\n\n\n\nweek\n\n\ntheory\n\n\napp \n misc.\n\n\nquestions\n\n\n\n\n\n\n\n\n\n\n1,2\n\n\nintro \nKL\n1, [\nslides\n]\n\n\n\n\n\n\n\n\n\n\n3\n\n\nperfect \n computational security \nKL\n2,3.1,3.2\n\n\n\n\n\n\n\n\n\n\n4\n\n\nprivate-key encryption \nKL\n3.4,3.5\n\n\n\n\n\n\n\n\n\n\n5\n\n\nmode of operations \nKL\n3.6,\nFSK\n4\n\n\n\n\n\n\n\n\n\n\n6\n\n\nkey-exchange \n TLS \nKL\n10,12.7/8, [\nFirst msec in HTTPS\n],\n\n\n\n\n\n\n\n\n\n\n7\n\n\nMAC \nKL\n4\n\n\nSW attestation \nSGX\n-3.3\n\n\n\n\n\n\n\n\n8\n\n\nhash \nKL\n5\n\n\nrecitation (HW 1,2)\n\n\n1. what're three security notions for Hash? 2. name the domain extension for Hash? 3. name the industrial-standard variable-length MAC? 4. name a generic attack against hash? 5. name one application of hash.\n\n\n\n\n\n\n9\n\n\nSpring break\n\n\n\n\n\n\n\n\n\n\n10\n\n\n\n\nblockchain \nBitcoin\n, TPM-measurement [\nTCG\n]", 
            "title": "Homepage"
        }, 
        {
            "location": "/#cis600-applied-cryptography", 
            "text": "Instructor: Yuzhe (Richard) Tang  Time: MW 10:35 - 11:55 am  Place: Link Hall 211", 
            "title": "CIS600 Applied Cryptography"
        }, 
        {
            "location": "/#reading-materials", 
            "text": "Textbooks   Introduction to Modern Cryptography (2nd edition), Jonathan Katz and Yehuda Lindell, ( KL )   Cryptography Engineering: Design Principles and Practical Applications, 1st Edition, Niels Ferguson, Bruce Schneier, Tadayoshi Kohno ( FSK )  Principles of Computer System Design: An Introduction, Information Security (Chapter 11), Jerome H. Saltzer, M. Frans Kaashoek, [ online book ], ( SK )    Other useful books  Bitcoin and Cryptocurrency Technologies, Arvind Narayanan, Joseph Bonneau, Edward Felten, Andrew Miller, Steven Goldfeder, [ online book ], ( BitCoin )  Intel SGX Explained, Victor Costan, Srinivas Devadas, [ pdf ], ( SGX )  Network Security with OpenSSL, Pravir Chandra, Matt Messier, John Viega ( OpenSSL )  A course in cryptography, Rafael Pass, abhi shelat ( PS )", 
            "title": "Reading materials"
        }, 
        {
            "location": "/#syllabus", 
            "text": "[ pdf ]", 
            "title": "Syllabus"
        }, 
        {
            "location": "/#schedule", 
            "text": "week  theory  app   misc.  questions      1,2  intro  KL 1, [ slides ]      3  perfect   computational security  KL 2,3.1,3.2      4  private-key encryption  KL 3.4,3.5      5  mode of operations  KL 3.6, FSK 4      6  key-exchange   TLS  KL 10,12.7/8, [ First msec in HTTPS ],      7  MAC  KL 4  SW attestation  SGX -3.3     8  hash  KL 5  recitation (HW 1,2)  1. what're three security notions for Hash? 2. name the domain extension for Hash? 3. name the industrial-standard variable-length MAC? 4. name a generic attack against hash? 5. name one application of hash.    9  Spring break      10   blockchain  Bitcoin , TPM-measurement [ TCG ]", 
            "title": "Schedule"
        }, 
        {
            "location": "/homework/", 
            "text": "Homework 1\n\n\n\n\n[Exercise 2.7] When using the one-time pad with the key k = 0^l, we have Enc_k(m) = k xor m = m and the message is sent in the clear! It has therefore been suggested to modify the one-time pad by only encrypting with k != 0^l (i.e., to have Gen choose k uniformly from the set of nonzero keys of length l). Is this modified scheme still perfectly secret? Explain.\n\n\nProve that we may assume that the key-generation algorithm Gen always chooses a key uniformly from the key space K.\n\n\n[Bonus:30/100] [Exercise 3.4]: Prove the equivalence of Definition 3.8 and Definition 3.9.\n\n\n\n\nHomework 2\n\n\n\n\nWrite programs (with language of your choice) to implement the following: \n\n\none-time pad \n\n\nthe RC4 stream cipher (read chapter 6.1.4 in textbook) \n\n\nconstruction 3.17 \n\n\ndomain extension for a variable-length encryption based on 3); hint: use stream-cipher mode of operation (read 3.6.1). Note no block cipher is allowed in the implementation.\n\n\n\n\n\n\n[Exercise 3.20]: Consider a stateful variant of CBC-mode encryption where the sender simply increments the IV by 1 each time a message is encrypted (rather than choosing IV at random each time). Show that the resulting scheme is not CPA-secure.\n\n\n[Bonus: 30/100] Write down the proof of security for Theorem 3.18 IN YOUR OWN LANGUAGE. Don't copy and paste from the textbook.\n\n\n\n\nHomework 3\n\n\n\n\nWrite programs (with language of your choice) to implement the following: \n\n\nDES block cipher (read Textbook \nKL\n 6.2.3)\n\n\nA CPA-secure construction for fixed-length encryption (of your choice) \n\n\nA CPA-secure construction for variable-length encryption; use CBC mode for domain extension.\n\n\n\n\n\n\nRead online [\ntutorial\n], finish the following operations:\n\n\ncreate a self signed CA certificate)\n\n\ncreate the private key and certificate request for a user, CIS600) Send the certificate request to CA for signing)\n\n\nsign a certificate request)\n\n\ncreate public key from the private key and use them to encrypt and decrypt msg)\n\n\ncreate, sign, and verify message digest)\n\n\n\n\n\n\n[Exercise 10.4] Consider the following key-exchange protocol: (a) Alice chooses uniform k, r in {0, 1}^n, and sends s := k xor r to Bob. (b) Bob chooses uniform t in {0, 1}^n, and sends u := s xor t to Alice. (c) Alice computes w := u xor r and sends w to Bob. (d) Alice outputs k and Bob outputs w xor t. Show that Alice and Bob output the same key. Analyze the security of the scheme (i.e., either prove its security or show a concrete attack).", 
            "title": "Homework"
        }, 
        {
            "location": "/homework/#homework-1", 
            "text": "[Exercise 2.7] When using the one-time pad with the key k = 0^l, we have Enc_k(m) = k xor m = m and the message is sent in the clear! It has therefore been suggested to modify the one-time pad by only encrypting with k != 0^l (i.e., to have Gen choose k uniformly from the set of nonzero keys of length l). Is this modified scheme still perfectly secret? Explain.  Prove that we may assume that the key-generation algorithm Gen always chooses a key uniformly from the key space K.  [Bonus:30/100] [Exercise 3.4]: Prove the equivalence of Definition 3.8 and Definition 3.9.", 
            "title": "Homework 1"
        }, 
        {
            "location": "/homework/#homework-2", 
            "text": "Write programs (with language of your choice) to implement the following:   one-time pad   the RC4 stream cipher (read chapter 6.1.4 in textbook)   construction 3.17   domain extension for a variable-length encryption based on 3); hint: use stream-cipher mode of operation (read 3.6.1). Note no block cipher is allowed in the implementation.    [Exercise 3.20]: Consider a stateful variant of CBC-mode encryption where the sender simply increments the IV by 1 each time a message is encrypted (rather than choosing IV at random each time). Show that the resulting scheme is not CPA-secure.  [Bonus: 30/100] Write down the proof of security for Theorem 3.18 IN YOUR OWN LANGUAGE. Don't copy and paste from the textbook.", 
            "title": "Homework 2"
        }, 
        {
            "location": "/homework/#homework-3", 
            "text": "Write programs (with language of your choice) to implement the following:   DES block cipher (read Textbook  KL  6.2.3)  A CPA-secure construction for fixed-length encryption (of your choice)   A CPA-secure construction for variable-length encryption; use CBC mode for domain extension.    Read online [ tutorial ], finish the following operations:  create a self signed CA certificate)  create the private key and certificate request for a user, CIS600) Send the certificate request to CA for signing)  sign a certificate request)  create public key from the private key and use them to encrypt and decrypt msg)  create, sign, and verify message digest)    [Exercise 10.4] Consider the following key-exchange protocol: (a) Alice chooses uniform k, r in {0, 1}^n, and sends s := k xor r to Bob. (b) Bob chooses uniform t in {0, 1}^n, and sends u := s xor t to Alice. (c) Alice computes w := u xor r and sends w to Bob. (d) Alice outputs k and Bob outputs w xor t. Show that Alice and Bob output the same key. Analyze the security of the scheme (i.e., either prove its security or show a concrete attack).", 
            "title": "Homework 3"
        }
    ]
}